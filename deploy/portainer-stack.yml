version: "3.8"

services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017" # Optional: expose MongoDB for local access

  backend:
    build:
      context: ../backend
    restart: unless-stopped
    environment:
      ASPNETCORE_URLS: http://+:8080
      MONGO_CONNECTION_STRING: mongodb://mongo:27017
      MONGO_DB_NAME: aytugdb
      # Writes new/updated post JSON here so web can serve it
      JSON_DIR: /app/public/generated/post
      # Optional: where to mirror MDX files inside the container
      CONTENT_DIR: /app/content/posts
      # Provide real secrets via Portainer UI or env vars
      # JWT_SECRET: "change-me"
      # JWT_ISSUER: "aytug-blog"
      # JWT_AUDIENCE: "aytug-blog"
      # ADMIN_USER: "admin"
      # ADMIN_PASS: "strong-password"
    depends_on:
      - mongo
    # No external port needed when using the proxy
    volumes:
      - ../content:/app/content
      - generated-posts:/app/public/generated/post

  web:
    build:
      context: ..
      dockerfile: Dockerfile.web
      # No PNPM; Dockerfile handles npm and env
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # Use same-origin API via Nginx at /api
      NEXT_PUBLIC_API_BASE_URL: /api
    depends_on:
      - backend
    # No external port; served via proxy
    volumes:
      # Share generated post JSON so Next can serve it at runtime
      - generated-posts:/app/public/generated/post:ro

  proxy:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on:
      - web
      - backend
    ports:
      - "4000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  mongo-data:
  generated-posts:
